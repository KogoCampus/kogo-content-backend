name: build and test
on:
    push:
        branches:
            - main
    pull_request:
        branches:
            - main
        paths:
            - 'src/**'
    release:
        types: [created]

jobs:
    build-and-test:
        runs-on: ubuntu-22.04
        steps:
            - name: Checkout Code
              uses: actions/checkout@v3
              with:
                  ref: ${{ github.event.pull_request.head.sha }}

            - name: Set Release Context
              if: github.event_name == 'release'
              run: |
                echo "Triggered by release ${{ github.event.release.tag_name }}" >> $GITHUB_STEP_SUMMARY
                echo "RELEASE_CONTEXT=true" >> $GITHUB_ENV

            - uses: actions/setup-java@v3
              with:
                  distribution: temurin
                  java-version: 21

            - name: Setup AWS CLI
              uses: aws-actions/configure-aws-credentials@v1
              with:
                  aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  aws-region: us-west-2

            - name: Start docker compose services
              run: |
                docker compose -f docker-compose.test.yml up -d
                echo "Waiting for MongoDB to be ready..."
                timeout 30 bash -c 'until docker compose -f docker-compose.test.yml logs mongod | grep "Waiting for connections"; do sleep 1; done'
                echo "MongoDB is ready"

            - name: Build and Test
              run: |
                ./gradlew test --info --stacktrace

            - name: Cleanup Docker Compose
              if: always()
              run: docker compose -f docker-compose.test.yml down -v

            - name: Create Release Context Commit
              if: env.RELEASE_CONTEXT == 'true'
              run: |
                git config --global user.name 'GitHub Actions'
                git config --global user.email 'actions@github.com'
                git commit --allow-empty -m "Triggered by release ${{ github.event.release.tag_name }}"
                git push
